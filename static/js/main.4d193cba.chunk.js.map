{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","baseUrl","useState","data","setData","modalInsertar","setModalInsertar","modalEditar","setModalEditar","modalEliminar","setModalEliminar","codigo","nombre","telefono","email","gestorSeleccionado","setGestorSeleccionado","handleChange","e","target","name","value","console","log","abrirCerrarModalInsertar","abrirCerrarModalEditar","abrirCerrarModalEliminar","peticionGet","a","axios","get","then","response","catch","error","peticionPost","post","concat","peticionPut","put","respuesta","map","gestor","peticionDelete","delete","parseInt","filter","seleccionarGestor","caso","useEffect","className","onClick","isOpen","type","onChange","class","readOnly","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d193cba.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport \"bootswatch/dist/vapor/bootstrap.min.css\";\nimport axios from 'axios';\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\n\nfunction App(){\n  const baseUrl=\"https://localhost:44376/api/Cliente\";\n  const [data, setData]=useState([]);\n  const [modalInsertar, setModalInsertar]=useState(false);\n  const [modalEditar, setModalEditar]=useState(false);\n  const [modalEliminar, setModalEliminar]=useState(false);\n  const [gestorSeleccionado, setGestorSeleccionado]=useState({\n    codigo : '',\n    nombre : '',\n    telefono : '',\n    email : ''\n  })\n\n  const handleChange=e=>{\n    const {name, value}=e.target;\n    setGestorSeleccionado({\n      ...gestorSeleccionado,\n      [name]: value\n    });\n    console.log(gestorSeleccionado);\n  }\n\n  const abrirCerrarModalInsertar=()=>{\n    setModalInsertar(!modalInsertar)\n  }\n\n  const abrirCerrarModalEditar=()=>{\n    setModalEditar(!modalEditar)\n  }\n\n  const abrirCerrarModalEliminar=()=>{\n    setModalEliminar(!modalEliminar)\n  }\n\n  const peticionGet=async()=>{\n    await axios.get(baseUrl)\n    .then(response=>{\n      setData(response.data);\n    }).catch(error=>{\n      console.log(error)\n    })\n  }\n\n  const peticionPost=async()=>{\n    delete gestorSeleccionado.codigo;\n    await axios.post(baseUrl, gestorSeleccionado)\n    .then(response=>{\n      setData(data.concat(response.data));\n      abrirCerrarModalInsertar();\n    }).catch(error=>{\n      console.log(error)\n    })\n  }\n\n  const peticionPut=async()=>{\n    await axios.put(baseUrl+\"/\"+gestorSeleccionado.codigo, gestorSeleccionado)\n    .then(response=>{\n      var respuesta=response.data;\n      var dataAuxiliar=data;\n      dataAuxiliar.map(gestor=>{\n        if(gestor.codigo===gestorSeleccionado.codigo){\n          gestor.nombre=respuesta.nombre;\n          gestor.telefono=respuesta.telefono;\n          gestor.email=respuesta.email;\n        }\n      })\n      abrirCerrarModalEditar();\n    }).catch(error=>{\n      console.log(error)\n    })\n  }\n  \n  const peticionDelete=async()=>{\n    await axios.delete(baseUrl+\"/\"+parseInt(gestorSeleccionado.codigo))\n    .then(response=>{\n      setData(data.filter(gestor=>gestor.codigo!==response.data));\n      abrirCerrarModalEliminar();\n    }).catch(error=>{\n      console.log(error)\n    })\n  }\n\n  const seleccionarGestor=(gestor, caso)=>{\n    setGestorSeleccionado(gestor);\n    (caso===\"Editar\")?\n    abrirCerrarModalEditar(): abrirCerrarModalEliminar();\n  }\n\n  useEffect(() => {\n    peticionGet();\n    },[])\n\n  return(\n    <div className=\"App\">\n      <h1>Clientes</h1>\n      <br/><br/>\n      <button className=\"btn btn-outline-success\" onClick={()=>abrirCerrarModalInsertar()}>Agregar Cliente</button>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Codigo</th>\n            <th>Nombre</th>\n            <th>Telefono</th>\n            <th>Email</th>\n            <th>Botones</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(gestor => (\n            <tr key={gestor.codigo}>\n              <td>{gestor.codigo}</td>\n              <td>{gestor.nombre}</td>\n              <td>{gestor.telefono}</td>\n              <td>{gestor.email}</td>\n              <td>\n                <button className=\"btn btn-outline-primary\" onClick={()=>seleccionarGestor(gestor, \"Editar\")}>Editar</button>{\" \"}\n                <button className=\"btn btn-outline-danger\" onClick={()=>seleccionarGestor(gestor, \"Eliminar\")}>Eliminar</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <Modal isOpen={modalInsertar}>\n        <ModalHeader>Insertar Cliente</ModalHeader>\n        <ModalBody>\n          <div>\n            <label className=\"form-label mt-4\">Nombre: </label>\n            <br/>\n            <input type=\"text\" className=\"form-control me-sm-2\" name=\"nombre\" onChange={handleChange}/>\n            <br/>\n            <label className=\"form-label mt-4\">Telefono: </label>\n            <br/>\n            <input type=\"text\" className=\"form-control me-sm-2\" name=\"telefono\" onChange={handleChange}/>\n            <br/>\n            <label className=\"form-label mt-4\">Email: </label>\n            <br/>\n            <input type=\"text\" className=\"form-control me-sm-2\" name=\"email\" onChange={handleChange}/>\n            <br/>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button class=\"btn btn-light\" onClick={()=>peticionPost()}>Insertar</button>{\"  \"}\n          <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalInsertar()}>Cancelar</button>\n        </ModalFooter>\n      </Modal>\n\n      <Modal isOpen={modalEditar}>\n        <ModalHeader>Editar Cliente</ModalHeader>\n        <ModalBody>\n          <div>\n            <label className=\"form-label mt-4\">Codigo</label>\n            <br/>\n            <input type=\"text\" readOnly className=\"form-control me-sm-2\" value={gestorSeleccionado && gestorSeleccionado.codigo}/>\n            <br/>\n            <label className=\"form-label mt-4\">Nombre: </label>\n            <br/>\n            <input type=\"text\" name=\"nombre\" className=\"form-control me-sm-2\" onChange={handleChange} value={gestorSeleccionado && gestorSeleccionado.nombre}/>\n            <br/>\n            <label className=\"form-label mt-4\">Telefono: </label>\n            <br/>\n            <input type=\"text\" name=\"telefono\" className=\"form-control me-sm-2\" onChange={handleChange} value={gestorSeleccionado && gestorSeleccionado.telefono}/>\n            <br/>\n            <label className=\"form-label mt-4\">Email: </label>\n            <br/>\n            <input type=\"text\" name=\"email\" className=\"form-control me-sm-2\" onChange={handleChange} value={gestorSeleccionado && gestorSeleccionado.email}/>\n            <br/>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-primary\" onClick={()=>peticionPut()}>Editar</button>{\"  \"}\n          <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalEditar()}>Cancelar</button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={modalEliminar}>\n        <ModalBody>\n          ¿Estás seguro que deseas eliminar el registro {gestorSeleccionado && gestorSeleccionado.nombre}?\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-danger\" \n          onClick={()=>peticionDelete()}>\n            Sí\n          </button>\n          <button className=\"btn btn-secundary\"\n          onClick={()=>abrirCerrarModalEliminar()}>\n            No\n          </button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}